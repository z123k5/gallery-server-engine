import numpy as np
import tensorflow as tf
import torch

# 假设 text_features 和 image_features 是 PyTorch 计算得到的
# 先转换为 NumPy
text_features = np.array([[-0.024669722, 0.024907883, -0.026161205, -0.012817444, 0.0024240178, 0.014643236, -0.021415886, 0.010605941, 0.02566865, -0.004245542, 0.05409107, 0.012644383, -0.019326733, -0.035606056, -0.015832448, 0.05495325, -0.028616196, 0.041173223, -0.015476481, 0.03328143, 0.028746951, -0.042309303, -0.04059733, -0.020391816, -0.0186644, -0.003012423, -0.0765457, -0.015340162, 0.033703208, -0.032982405, 0.014993363, -0.06457366, -0.009636439, 0.010355678, -0.04430862, 0.04542717, -0.014389145, -0.03472815, 0.025261091, -0.031162294, 0.016165642, -0.05126661, -0.044922903, 0.028691709, 0.0066041914, -0.057299357, -0.003667726, 0.061363224, 0.018149013, 0.04183967, -0.03960003, 0.009934184, -0.018180642, -0.018828077, 0.023749102, -0.027639944, -0.030086817, -0.01766759, 0.029301211, -0.00982515, 0.03308426, 0.008305098, -0.019875366, 0.0135491695, -8.6963666E-4, 0.016277693, -0.026225552, -0.0719288, -0.111278795, 0.050954778, 0.022640811, -0.042266823, 0.01595805, -0.02030651, -0.056958016, 0.04858659, -0.02542633, -0.035238363, -0.0049568, -0.08035854, -6.376748E-4, 0.032654416, 0.014815459, 0.02730763, -0.01563204, 0.081210874, -0.01475228, -1.9755785E-4, -0.0125218015, 0.011153849, -0.0051509854, -0.009129785, 0.01591789, 0.040055446, -0.0024716076, -0.008117602, 0.03951396, 0.0021477842, 0.044269595, -0.008746635, -3.9847368E-5, 0.047775187, -0.07232647, 0.013834889, -0.004736082, -0.049199887, 0.024641806, -0.001260394, -0.03335006, -0.061019957, -0.007431683, -0.033601217, -0.048819236, -0.010186795, -0.0103195645, -0.005645275, -0.05473365, 0.009776158, -0.04602477, -0.036871497, -0.08884432, -5.06802E-5, -0.0036203738, 0.03862702, -0.0069558905, 0.007441357, -0.019888937, -0.0054113786, -0.016446883, 0.02120084, 0.043713238, -0.03963593, -0.05132086, 0.0033097686, 0.009027356, 0.007230684, 0.02756239, 0.001696014, -0.0026855166, -0.03206108, 0.029548494, -0.039709855, -0.019187659, 0.01188708, 0.04237252, 0.028086068, -0.021851407, 0.028417729, 0.015428333, 0.026910335, 0.025340939, 0.009797881, 0.013362324, -0.049373977, -0.030146025, 0.025351057, -0.016897356, 0.010316912, 0.028236803, -0.017954372, -0.044554517, -0.003037001, 0.022873592, -0.0515708, -0.0815372, -0.015225523, 0.02343668, 0.025501356, 0.0014742416, 0.031860057, -0.053967986, -0.056407135, -0.00639135, 0.034035616, -0.013361865, 0.005962157, 0.020385642, 7.3580025E-4, 0.021158086, -0.038969915, -0.0146342525, 0.021590605, 0.05391532, 0.08185514, 0.023997381, 0.019992653, -0.03303834, -0.017126713, 0.00804839, 0.08122607, 0.0011345866, -0.02080193, 0.07479146, -0.0019635067, 0.048565775, 0.062407043, 0.006282794, -0.044555184, 0.012197183, 0.004564423, -0.016160928, -0.046376288, -0.028965767, 0.05926498, -0.040179927, -0.039488032, 0.02441165, 0.030759221, 0.06007065, -0.025865272, 0.041585125, -0.041209295, 0.034658693, -0.030766519, 0.047146615, 0.021891622, 0.00532056, -0.028806312, -0.007860137, -0.008099291, -0.039640453, -0.02914727, 0.062278334, 0.056206405, 0.06906391, 0.0033903723, 0.004100171, 0.02626357, -0.023406563, 0.046903696, -0.02493893, 0.010282303, -0.015121629, -0.029393569, -0.005045243, -0.011660651, 0.029593332, -0.08162088, 0.01627405, 0.020900741, 0.021336399, -0.01485067, -0.01203847, 0.0045862026, -0.05404412, 0.051916603, -0.038245127, 0.046353906, -0.004036786, -0.0027227888, 0.023808599, 0.0021725402, -0.016221598, -0.0049217176, 0.017212095, 0.03971244, 0.011248341, -0.066761, 0.0070008235, 0.017295977, 0.07572269, 0.04721825, -0.0072838706, -0.05034698, -0.030562023, -0.03363341, 0.018449027, -0.027762983, 0.01494106, -0.016373528, 0.027322171, 0.010222087, -0.053632148, 0.032984655, -0.024745142, 0.05505448, 0.09620578, 0.07682212, -0.034433573, -0.01688492, 0.013186676, 0.09477903, 0.0061312844, -0.0305596, -0.004579911, -0.058533352, 0.027092217, -0.02005464, 0.11229442, -0.008978365, 0.010472168, -0.024854057, -0.0012558551, -0.02135854, 0.02769109, 0.06888088, 0.051289346, 0.038015705, -0.023331437, 0.035809856, 0.015142521, 0.046915717, 0.032396395, 0.007263337, 0.019230483, -0.06122174, 0.035913195, -0.03656794, 0.05958158, 0.049776398, 0.030336713, 0.048756257, -0.030403242, 0.03396613, -0.021264575, -0.033150658, 0.026983708, 0.010364076, 0.015058266, 0.02568649, 0.0037182427, 0.10528209, -0.085956626, 8.6781284E-4, -0.05126349, 0.02126244, -0.03775984, -0.013378271, 0.0018073928, 0.0017213821, -0.0434069, 0.021827223, -0.008765138, 0.0033164935, -0.013772863, -0.022886029, 0.0031119573, 0.05745468, -0.019072875, 0.035788488, -0.10101886, -0.016429018, -0.004689556, -0.06389016, -0.004160391, 0.025893772, -0.020229476, 0.0351052, -0.022089157, -0.0831085, 0.012652001, 0.015473826, -0.009813134, -0.020303704, -0.00858868, -0.018094502, 0.004515815, 0.02863715, -0.004607053, 0.011330052, -0.007698759, -0.020815548, 0.03999621, 0.02673801, 0.057610776, 0.08025251, 0.10913456, 0.023487203, 0.054604184, -0.039516624, 0.019660698, -0.011476608, -0.009702576, 4.2378152E-4, -0.0033964042, 0.032578062, 0.008259772, -0.037048925, 0.009944366, 0.013122746, 0.022600595, 0.0127933305, -0.0020785271, 0.0066181268,
                         0.023690473, 0.008708672, -0.006948477, -0.05287729, 0.0026859515, 0.008424185, -0.008022042, 0.035927817, 0.014343774, 0.042248424, 0.05418795, -0.033345252, 0.027563853, 0.004391777, 0.03183513, 0.0127611905, 0.0014568262, -0.021326311, -0.0058718743, -0.03340245, -0.03892418, -0.008018734, -0.038092006, -0.017863091, -0.047636375, -0.055288017, -0.022000294, -0.004221024, -0.020395659, -0.009951515, -0.006847955, 0.027240947, -0.063227504, 0.07780605, -0.045914687, -0.02246148, 0.01498536, 0.041562207, 0.015141267, 0.0059088054, 0.008729061, 0.0055108042, -0.0038009353, -0.051299207, 0.035467938, 0.011240272, -0.0148361465, -0.020468652, 0.047429115, 0.042748272, 0.011279059, -0.016748406, -0.028097732, 0.018802572, 0.04952536, 0.0010456451, 0.014034984, -0.024282191, -0.006732497, 0.0056941696, -0.0024476263, -0.059094667, -0.044742517, -6.732604E-4, -4.3951336E-4, -0.007315418, 0.0322675, 0.07755332, -0.012647131, 0.003381198, 0.02622884, 0.02658831, -0.0062866565, 0.018930906, -0.028953983, -0.015850607, -0.053124756, 0.07211459, -0.020412492, -0.026873793, 0.0024129455, 0.052611724, 0.005981223, 0.007506698, 0.0018342537, -0.018612444, -0.039933164, 0.007748738, -0.019711344, 0.010234875, 0.01875296, -0.012709752, -0.049011763, -0.03707659, 0.034211107, 0.0062873582, 0.054155298, 0.08771562, -0.003433093, -0.029182004, -0.019426877, 0.013949803, -0.021269003, 0.04695575, 0.050243407, 0.07755371, 0.02338721, 0.011237722, 0.037673116, -0.04921066, 0.018175552, 0.03751686, -0.009687226, -0.03229946, -0.05320063, -0.049671564, -0.048649002, 0.003925127, 0.035394214, -0.012817525, -0.0045152507, -0.010310808, -0.010564146, 0.014392022, 0.04542211, 0.07810095, 0.00533808, -0.0035890916, -0.0058516837, 0.04237418, -0.089860454, -0.0043680426, 0.05899585, -0.0135984775, -0.011989975, 0.019110419, 3.1980366E-4, -0.04430038, -0.054811236, 0.0294212, -0.04947974, -0.019066555, 0.009018822, 0.03154349, -0.00393961, 0.034411807, -0.013519621, -0.02307498, 0.019321477, -0.0164302, 0.037591, 0.027357535, 0.03509191, -0.05468829, 0.057735726, 0.009524331, 0.006004401, -0.019310683, 0.02775174, 0.0061007077, 0.038184687, 0.010521585, -0.057642594, -0.004846579, -0.0084863, 0.0045447745, -0.008321967, 0.010536085, 3.676984E-4, -0.010845068, 0.021178175, -0.032998018, -0.07115454, 0.02270664, -0.0027510866, 0.02014124, 0.01374048, 0.0049716807, -0.023919966, 0.058243565, 0.051666602, -0.031756375, -0.02643427, 0.0732058, 0.07174755, -0.03829562, 0.007988193, 0.032918368, -0.004764216, -0.049056515, 0.012449984, -0.0064936704, -0.07128918, -0.07805596, 0.011213727, -0.06035419, 0.004276377, -0.031516954, -0.044617552, 0.015898628, -0.05048788, -0.010612629, -0.037278548, -0.01499829, 0.015967391, 0.020834742, -0.041453, -0.020691965, -0.03417734, 0.008166883, -0.039147582, 0.021984594, 0.021569904, -0.06159876, -3.579739E-4, 0.018195452, -0.089023516, -0.08552238, -0.064324886, 0.06946235, -0.02682469, -0.081434295, -0.053148866, -0.0048869196, 0.0014858738, -0.010421191, 0.032587662, -0.010402387, -0.022695716, -0.002867204, 0.012873847, -0.0095367115, 0.012066239, -0.07726823, -0.049361486, -0.033366445, 0.004505395, 0.012535533, -0.008054708, -0.016154315, 0.025500482, 0.044070277, 0.008034818, 0.055910826, 0.029128967, 0.046699885, 0.0069355844, -0.024247017, 0.025091898, 0.016621003, -0.0050583524, -0.042266145, 0.00612138, 0.005082371, 0.037297744, -0.0075499984, 0.043452997, 0.056883022, -0.021047665, -0.0032008193, 0.009164251, -0.062479623, 0.029395703, 0.05661769, -0.0070383446, -0.010785395, 0.0802942, 0.092375286, 0.06329139, 0.017320566, -0.019021211, -0.015223116, -0.047071695, -0.03871221, 0.017490173, -0.041867755, -0.03486343, 0.0625418, -0.023724407, -0.057942227, 0.02080467, 0.016537804, -0.0626279, -0.0022625248, -0.0016111421, -0.020786421, -0.041515924, 0.0070087356, 0.038228758, 0.06391247, 0.027457915, 0.057877623, -0.0077743805, 0.026773628, -0.029834297, 0.006212881, -0.040391773, 0.019662526, 0.04506863, 0.061159674, 0.068029776, -0.07142293, -0.0074546565, -0.026128583, -0.04181063, 0.033406556, 0.066467114, 0.0094508855, 0.036163107, 0.03546687, -0.06413354, 0.044736363, -0.020697247, 0.032121528, -0.022879986, 0.005321274, 0.051071335, 0.0032519554, -0.041730177, -0.029534198, 0.015142803, -0.021914966, -0.003308799, 0.020175537, 0.06771882, -0.077777036, -0.076742135, 0.042912126, 0.012267617, 0.013628072, 0.043730207, -0.011631284, 0.007842425, -0.010346521, -0.028727226, 0.021068675, 0.03946115, -0.051600926, 0.011338294, 0.0032056947, -0.03761395, 0.010142786, -0.009793604, 0.02758847, -0.049807306, -0.046321895, 0.015103923, 0.078679495, 0.0029598041, 0.08245275, -0.054939095, -0.0055419896, -0.049457096, 0.057329647, 0.017797854, 0.02743894, 0.027171902, -0.006496002, -0.007095341, -0.015875358, 0.024854, 0.023462836, -0.044350803, -0.025418028, 0.06257297, 0.053837728, -0.019397968, -0.029559502, -0.009169817, 0.012570039, -0.008283054, -0.0054660602, 0.051377803, -0.022868978, 0.01540128, -0.022710642, 0.039049275, -0.0071846023, 0.016584162, -0.03477132, 0.050967116, 0.069072366, -0.024344338, -0.02741275]])

from test1.xxyyzz import xxyyzz
image_features = np.array(xxyyzz)
logit_scale = 100.0  # logit_scale = e^100.0

# 创建 TFLite 模型


class SimilarityModel(tf.Module):
    def __init__(self):
        super().__init__()
        self.logit_scale = tf.Variable(logit_scale, dtype=tf.float32)

    @tf.function(input_signature=[
        tf.TensorSpec(shape=[1, 768], dtype=tf.float32),
        tf.TensorSpec(shape=[None, 768], dtype=tf.float32)
    ])
    def compute_similarity(self, text_feat, image_feat):
        # text_feat = tf.nn.l2_normalize(text_feat, axis=1)  # 归一化
        # image_feat = tf.nn.l2_normalize(image_feat, axis=1)  # 归一化
        logits = logit_scale * (text_feat @ tf.transpose(image_feat))
        # return tf.nn.softmax(logits, axis=-1)
        return tf.nn.softmax(logits, axis=-1)


# 转换为 TFLite
similarity_model = SimilarityModel()
converter = tf.lite.TFLiteConverter.from_concrete_functions(
    [similarity_model.compute_similarity.get_concrete_function()]
)
# 启用动态形状支持
converter.target_spec.supported_ops = [tf.lite.OpsSet.TFLITE_BUILTINS, tf.lite.OpsSet.SELECT_TF_OPS]
converter.experimental_new_converter = True

# 允许动态批次大小
converter._experimental_lower_tensor_list_ops = False

tflite_model = converter.convert()

# 保存 TFLite 模型
with open("similarity_model.tflite", "wb") as f:
    f.write(tflite_model)

# 运行 TFLite 计算
interpreter = tf.lite.Interpreter(model_content=tflite_model)
interpreter.allocate_tensors()

input_details = interpreter.get_input_details()
output_details = interpreter.get_output_details()

# 设置输入
interpreter.resize_tensor_input(
    input_details[1]['index'], (10, 768))  # 例如 image_features 有 10 个
interpreter.allocate_tensors()


interpreter.set_tensor(
    input_details[0]['index'], text_features.astype(np.float32))
interpreter.set_tensor(
    input_details[1]['index'], image_features.astype(np.float32))

# 运行
interpreter.invoke()

# 获取输出
probs = interpreter.get_tensor(output_details[0]['index'])
print("Probabilities:", np.around(probs, 3))

